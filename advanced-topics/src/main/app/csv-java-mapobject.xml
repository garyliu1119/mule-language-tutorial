<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="csv-java-mapobjectFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/advanced/csv/java/mapobject" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="080be7d0-759c-4ac3-af7f-8f8f1acf7554">
            <dw:input-payload mimeType="application/csv"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload filter ($.is_valid_worker != 'NO') 
map ((ew) -> {
	(ew mapObject (value, key) -> {
		((key) : updateBusinessTitle(value)) when (key as :string == 'Job Posting Title'),
		((key) : value) when (key as :string != 'Job Posting Title')
	})
}) groupBy $."Transaction Type"

]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
