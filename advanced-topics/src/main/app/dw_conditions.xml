<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="dw_conditionsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/advanced/dw/conditions" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload.HIR]" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%function getCostCenter(code)  code splitBy "-"
%function mydate(data) data splitBy "/"
%function formatDate(datestring)  datestring[2] ++ "-" ++ datestring[0] ++ "-" ++ datestring[1]
%function normalize(date) date replace "/" with "-" 
%function normalize2(date) (date replace "/" with "-") as :date {format: "MM-dd-yyyy"} as :string {format: "yyyy-MM-dd"} 
%var todayDate = now as :date {format: "yyyy-MM-dd"}
%var todayString = now as :string {format: "yyyy-MM-dd"}
%var aPeriod = ("P" ++ 2 ++ "D")			
---
payload map ((payload01 , indexOfPayload01) -> {
	worker_id: payload01."Work Order ID",
	secid_pin: {
		effective_date: normalize2(payload01."Start Date"),
		staff_id: "1111",
		//ebppin: getRandomNumber() when isEBP(payload01."Provisioning Group",payload01."Workday Worker Type")== true otherwise "",
		sid: payload01."Security ID",
		country: payload01.Country,
		national_id:payload01."Security ID"[6..9]
		},
	position: {
		title: payload01."Job Posting Title",
		Organization_Reference_ID: payload01."Org Unit Code",
		Availability_Date: todayString 
			when normalize2(payload01."Start Date") as :date {format: "yyyy-MM-dd"}  > todayDate
			otherwise normalize2(payload01."Start Date"),
		Earliest_Hire_Date: todayString 
			when normalize2(payload01."Start Date") as :date {format: "yyyy-MM-dd"}  > todayDate
			otherwise normalize2(payload01."Start Date"),		
		Job_Profile_ID: "40000001",
		//Company_Reference_ID: lookup("wd_get_organization_ID-Flow", {company_code: getCostCenter( payload01."Cost Center or WBS Element Code")[0]}),
		Cost_Center_Reference_ID: getCostCenter(payload01."Cost Center or WBS Element Code")[1],
		Location_ID: payload01."Job Site Code",
		Position_Time_Type_ID: payload01."Position Time Type",
		Workday_Worker_Type: payload01."Workday Worker Type",
		(OK_OK: payload01."Start Date")	when  normalize2(payload01."Start Date") as :date {format: "yyyy-MM-dd"}  > todayDate
	},
	requisition: {
		comments: "Test",
		position_id: "121345",
		ges_id: "GENERAL_EVENT_SUBCATEGORY-6-103",
		recruiting_start_date: todayString 
			when normalize2(payload01."Start Date") as :date {format: "yyyy-MM-dd"}  > todayDate
			otherwise normalize2(payload01."Start Date"),
		target_hire_date: todayString 
			when normalize2(payload01."Start Date") as :date {format: "yyyy-MM-dd"}  > todayDate
			otherwise normalize2(payload01."Start Date")
	},
 	applicant: {
 		first_name: payload01."First Name",
 		last_name: payload01."Last Name",
 		email: payload01."Worker Email",
 		//CUT: "Work" when isEBP(payload01."Provisioning Group",payload01."Workday Worker Type")== true otherwise "Home",
		applicant_entered_date: normalize2(payload01."Start Date"),
		applicant_entered_date: normalize2(payload01."Start Date"),
 		position_id: "12345",
		country_reference_id: payload01.Country
 	},
	contract-cw: {
		//applicant_id: lookup("wd_get_organization_ID-Flow", {staff_id: payload01."Buyer Reference"}),
		position_id: "12345",
		organization_reference_id: payload01."Org Unit Code",
		job_profile_id: "40000001",
		first_day_of_work:  normalize2(payload01."Start Date"),
		contract_end_date: normalize2(payload01."End Date"),
		//company_reference_id: lookup("wd_get_organization_ID-Flow", {company_code : getCostCenter(payload01."Cost Center or WBS Element Code")[0]}),
		cost_center_reference_id: getCostCenter(payload01."Cost Center or WBS Element Code")[1],
		reson_id: "Contract_Contingent_Worker_Contract_Contingent_Worker_Initial_Engagement",
		supplier_id: payload01."Vendor Number",
		Workday_Worker_Type: payload01."Workday Worker Type",
		Location_ID: payload01."Job Site Code",
		Position_Time_Type_ID: payload01."Position Time Type",
		title: payload01."Job Posting Title"
	},
	provisioning-group: {
            staff_id: "1111",
            provisioning_group:payload01."Provisioning Group" splitBy "|" filter ($ != "N/A"),           
            status:"Assigned"
    }
})]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
