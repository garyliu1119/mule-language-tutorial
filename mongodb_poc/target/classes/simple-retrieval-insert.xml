<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:magento="http://www.mulesoft.org/schema/mule/magento" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/magento http://www.mulesoft.org/schema/mule/magento/current/mule-magento.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <flow name="retrieve_inventory_Flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/inventory" allowedMethods="GET" doc:name="HTTP">
            <http:response-builder statusCode="#[flowVars.statusCode]"/>
        </http:listener>
        <validation:is-not-empty value="#[message.inboundProperties.'http.query.params'.collection]" message="url parameter collection must be set" doc:name="Validation" />
        <and-filter doc:name="And Filter">
            <custom-filter class="mongodb_poc.CustomFilter"/>
            <expression-filter expression="#[message.inboundProperties.'http.query.params'.collection != empty]"/>
        </and-filter>
        <expression-filter expression="#[message.inboundProperties.'http.query.params'.collection != empty]" doc:name="Expression Filter"/>

<!--  
        <mongo:find-objects config-ref="Mongo_DB" collection="#[message.inboundProperties.'http.query.params'.collection]" doc:name="Dynamically Retrieval"/>
 -->
        <mongo:find-documents config-ref="Mongo_DB" collection="#[message.inboundProperties.'http.query.params'.collection]"  doc:name="Dynamically Retrieval"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy when="#[exception.causedBy(org.mule.extension.validation.api.ValidationException)]" doc:name="Catch Validation Exception">
                <logger message="#[exception]" level="INFO" doc:name="Logger"/>
                <logger message="#[exception.getMessage()]" level="INFO" doc:name="Logger"/>
<!-- 
                <set-property propertyName="http.status" value="400" doc:name="Set HTTP Status"/>
                <set-property propertyName="http.reason" value="invalid parameter" doc:name="Set HTTP Reason"/>
                <set-variable variableName="statusCode" value="415" doc:name="Set statusCode"/>
 -->
                <scripting:component doc:name="Groovy">
                    <scripting:script engine="Groovy"><![CDATA[try {
	message.setOutboundProperty('http.status', '415')	
	message.setOutboundProperty('http.reason', 'Invalid Parameters')
	message.setInvocationProperty('statusCode', '415')		

} catch (Exception e ) {
	println (e.getMessage())
}
return payload
]]></scripting:script>
                </scripting:component>
                <set-payload value="#[['errorMessage' : exception.getMessage(), 'reason' : message.outboundProperties['http.reason'], 'status' : flowVars['statusCode']]]" doc:name="Set Payload"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
            </catch-exception-strategy>
            <catch-exception-strategy doc:name="Catch DB Connection Exception Strategy" when="#[exception.causedBy(java.net.ConnectException)]">
		        <logger level="INFO" doc:name="Logger" message="#[org.mule.util.ExceptionUtils]"/>
		        <set-payload value="#[['Cannot connect to MongoDB' : exception.getMessage]]" doc:name="Set Payload"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
            </catch-exception-strategy>
            <catch-exception-strategy doc:name="Catch Exception Strategy">
                <logger message="#[exception]" level="INFO" doc:name="Logger"/>
                <set-payload value="#[['Unknow Exception' : exception.getMessage()]]" doc:name="Set Payload"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
            </catch-exception-strategy>
        </choice-exception-strategy>

    </flow>
    
    <flow name="retrieve_inventory_transform_Flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/inventory/transform" allowedMethods="GET" doc:name="HTTP"/>
        <mongo:find-documents config-ref="Mongo_DB" collection="inventory" doc:name="Retrieve Inventory"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="85f1f523-5ae6-4fc2-9a88-f54cc520c67d">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map {
	item: $.item,
	stock: $.stock,
	details: $.details,
	category: $.category
}]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="mongodb-pos-insert-inventory_Flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/inventory" allowedMethods="POST" metadata:id="1f76baa6-5620-4dc0-8360-705115721033" doc:name="HTTP"/>

        <json:validate-schema schemaLocation="inventory-json-schema.json" doc:name="Validate JSON Schema"/>

        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        
        <mongo:insert-document config-ref="Mongo_DB" collection="inventory" doc:name="Mongo DB"/>
        
        
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
"objectId": payload]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger" message="#[payload]"/>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy when="#[exception.causedBy(org.mule.api.transformer.TransformerException)]" doc:name="Transform Exception">
                <logger level="INFO" doc:name="Logger" message="#[exception]"/>
                <set-payload value="#[exception + '\n' +  payload]" doc:name="Set Payload"/>
            </catch-exception-strategy>
            <catch-exception-strategy doc:name="Other Exceptions">
                <logger level="INFO" doc:name="Logger"/>
                <set-payload value="#[exception + '\n' +  payload]" doc:name="Set Payload"/>
            </catch-exception-strategy>
        </choice-exception-strategy>
    </flow>
</mule>
